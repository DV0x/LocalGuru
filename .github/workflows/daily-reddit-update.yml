name: Daily Reddit Data Update

on:
  schedule:
    # Run at 4:30 AM UTC (adjust as needed for your timezone)
    - cron: '30 4 * * *'
  # Allow manual triggering for testing
  workflow_dispatch:

jobs:
  update-reddit-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Verify secrets
        run: |
          echo "Checking if required secrets are set:"
          echo "NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL != '' }}"
          echo "SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY != '' }}"
          echo "REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID != '' }}"
          echo "REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME != '' }}"
      
      - name: Install dependencies
        run: |
          cd localguru-ingestion
          npm ci
          
          # List installed packages for debugging
          echo "=== Installed packages ==="
          npm list --depth=0
      
      - name: Create logs directory
        run: |
          cd localguru-ingestion
          mkdir -p logs
      
      - name: Run daily Reddit data collection
        env:
          # Supabase credentials - using the correct secret names
          SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          
          # Reddit API credentials
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: "script:com.localguru.redditfetcher:v1.0.0 (by /u/${{ secrets.REDDIT_USERNAME }})"
          
          # Development mode for verbose logging
          NODE_ENV: "development"
        run: |
          cd localguru-ingestion
          DATE=$(date +%Y-%m-%d)
          LOG_FILE="logs/reddit-$DATE.log"
          
          echo "========== Starting Reddit update at $(date) ==========" > $LOG_FILE
          echo "=== Environment ===" >> $LOG_FILE
          echo "Node version: $(node -v)" >> $LOG_FILE
          echo "NPM version: $(npm -v)" >> $LOG_FILE
          echo "Working directory: $(pwd)" >> $LOG_FILE
          echo "Script path exists: $(test -f src/scripts/daily-reddit-update.ts && echo 'Yes' || echo 'No')" >> $LOG_FILE
          
          # More detailed credential checks - while keeping secrets secure
          echo "=== Credential checks (without showing values) ===" >> $LOG_FILE
          echo "SUPABASE_URL set: $(test -n "$SUPABASE_URL" && echo 'Yes' || echo 'No')" >> $LOG_FILE
          echo "NEXT_PUBLIC_SUPABASE_URL set: $(test -n "$NEXT_PUBLIC_SUPABASE_URL" && echo 'Yes' || echo 'No')" >> $LOG_FILE
          echo "SUPABASE_SERVICE_ROLE_KEY set: $(test -n "$SUPABASE_SERVICE_ROLE_KEY" && echo 'Yes' || echo 'No')" >> $LOG_FILE
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY set: $(test -n "$NEXT_PUBLIC_SUPABASE_ANON_KEY" && echo 'Yes' || echo 'No')" >> $LOG_FILE
          
          # Reddit credential checks - critical for the 403 error
          echo "REDDIT_CLIENT_ID set: $(test -n "$REDDIT_CLIENT_ID" && echo 'Yes' || echo 'No')" >> $LOG_FILE
          echo "REDDIT_CLIENT_SECRET set: $(test -n "$REDDIT_CLIENT_SECRET" && echo 'Yes' || echo 'No')" >> $LOG_FILE
          echo "REDDIT_USERNAME set: $(test -n "$REDDIT_USERNAME" && echo 'Yes' || echo 'No')" >> $LOG_FILE
          echo "REDDIT_PASSWORD set: $(test -n "$REDDIT_PASSWORD" && echo 'Yes' || echo 'No')" >> $LOG_FILE
          echo "REDDIT_USER_AGENT: $REDDIT_USER_AGENT" >> $LOG_FILE
          
          # Check character count of credentials to validate they're not empty strings
          if [ -n "$REDDIT_CLIENT_ID" ]; then
            echo "REDDIT_CLIENT_ID length: ${#REDDIT_CLIENT_ID} chars" >> $LOG_FILE
          else
            echo "WARNING: REDDIT_CLIENT_ID is empty!" >> $LOG_FILE
          fi
          
          if [ -n "$REDDIT_USERNAME" ]; then
            echo "REDDIT_USERNAME length: ${#REDDIT_USERNAME} chars" >> $LOG_FILE
          else
            echo "WARNING: REDDIT_USERNAME is empty!" >> $LOG_FILE
          fi
          
          echo "=== Starting script execution ===" >> $LOG_FILE
          
          # Create temporary .env file to ensure env vars are loaded
          echo "# Temporary .env file for GitHub Actions" > .env
          echo "NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL" >> .env
          echo "SUPABASE_URL=$SUPABASE_URL" >> .env
          echo "SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_ROLE_KEY" >> .env
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY" >> .env
          echo "REDDIT_CLIENT_ID=$REDDIT_CLIENT_ID" >> .env
          echo "REDDIT_CLIENT_SECRET=$REDDIT_CLIENT_SECRET" >> .env
          echo "REDDIT_USERNAME=$REDDIT_USERNAME" >> .env
          echo "REDDIT_PASSWORD=$REDDIT_PASSWORD" >> .env
          echo "REDDIT_USER_AGENT=$REDDIT_USER_AGENT" >> .env
          
          # Run with more verbose output
          npx ts-node --transpile-only src/scripts/daily-reddit-update.ts >> $LOG_FILE 2>&1
          EXIT_CODE=$?
          
          # Improved error detection - looking specifically for 403 Forbidden
          if grep -q "Posts processed: 0" $LOG_FILE && grep -q "403" $LOG_FILE; then
            echo "WARNING: Script completed but processed 0 posts and encountered 403 errors!" >> $LOG_FILE
            echo "This indicates a problem with Reddit API authentication." >> $LOG_FILE
            echo "Please check:" >> $LOG_FILE
            echo "1. Your Reddit API credentials are correctly set in GitHub secrets" >> $LOG_FILE
            echo "2. The account has been verified (new Reddit accounts may have limitations)" >> $LOG_FILE
            echo "3. Your app is properly registered at https://www.reddit.com/prefs/apps" >> $LOG_FILE
            echo "4. Your user agent follows the proper format: script:bot_name:version (by /u/username)" >> $LOG_FILE
            EXIT_CODE=1
          fi
          
          # Clean up temporary .env file
          rm .env
          
          echo "========== Finished at $(date) with exit code $EXIT_CODE ==========" >> $LOG_FILE
          
          # Output last 50 lines of log for immediate visibility in GitHub Actions
          echo "=== Last 50 lines of log ==="
          tail -n 50 $LOG_FILE
          
          # Set output for log filename
          echo "log_filename=reddit-$DATE.log" >> $GITHUB_OUTPUT
          
          # Exit with the same code as the script
          exit $EXIT_CODE
        id: run_script
      
      - name: Upload log as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reddit-update-logs
          path: localguru-ingestion/logs/${{ steps.run_script.outputs.log_filename }}
          retention-days: 7
      
      # Optional email notification - manually added when needed
      # Uncomment and configure this section after setting up email secrets
      # 
      # - name: Send failure notification
      #   if: failure()
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: ${{ secrets.MAIL_SERVER }}
      #     server_port: ${{ secrets.MAIL_PORT }}
      #     username: ${{ secrets.MAIL_USERNAME }}
      #     password: ${{ secrets.MAIL_PASSWORD }}
      #     subject: "‚ùå Reddit Data Update Failed"
      #     body: |
      #       The daily Reddit data update job failed.
      #       
      #       Repository: ${{ github.repository }}
      #       Workflow: ${{ github.workflow }}
      #       Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      #       
      #       Please check the logs for more details.
      #     to: ${{ secrets.MAIL_RECIPIENT }}
      #     from: GitHub Actions 